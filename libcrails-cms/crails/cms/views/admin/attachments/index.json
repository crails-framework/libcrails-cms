#include <crails/i18n.hpp>
#include "../../../models/attachment.hpp"

using namespace std;

vector<shared_ptr<Crails::Cms::Attachment>>& @models;
map<string,string> @tag_options;
unsigned long @items_count;
Data& @session;
string @attachment_path = "/attachments/by-id";

// END LINKING

typedef vector<shared_ptr<Crails::Cms::Attachment>> List;

json([&]()
{
  json("csrf-token", session["csrf-token"].defaults_to<string>(""));
  json("count", items_count);
  json_array<List, List::value_type>("files", models, [&](shared_ptr<Crails::Cms::Attachment> model)
  {
    string url = attachment_path + '/' + to_string(model->get_id());

    json("name", model->get_name());
    json("description", model->get_description());
    json("mimetype", model->get_mimetype());
    json("url", url);
    json("url_alt", model->as_attachment().get_url());
    if (model->get_type() == Crails::Cms::ImageAttachment)
    {
      const Crails::BasicImage miniature = model->get_miniature();
      auto size = model->as_image().size();
      auto miniature_size = miniature.size();

      json("width", size.first);
      json("height", size.second);
      json("miniature_url", url + "/thumbnail");
      json("miniature_url_alt", miniature.get_url());
      json("miniature_width", miniature_size.first);
      json("miniature_height", miniature_size.second);
    }
    if (model->get_processing())
      json("processing", true);
  });
  json_map("tag_options", tag_options);
});
